//? Verify Src: https://brailleworks.com/braille-resources/what-is-braille/

const Map<String, List<String>> brailleDict = {
  'a': ['100000'],
  'b': ['101000'],
  'c': ['110000'],
  'd': ['110100'],
  'e': ['100100'],
  'f': ['111000'],
  'g': ['111100'],
  'h': ['101100'],
  'i': ['011000'],
  'j': ['011100'],
  'k': ['100010'],
  'l': ['101010'],
  'm': ['110010'],
  'n': ['110110'],
  'o': ['100110'],
  'p': ['111010'],
  'q': ['111110'],
  'r': ['101110'],
  's': ['011010'],
  't': ['011110'],
  'u': ['100011'],
  'v': ['101011'],
  'x': ['110011'],
  'y': ['110111'],
  'z': ['100111'],
  'w': ['011101'],

  '1': ['100000'],
  '2': ['101000'],
  '3': ['110000'],
  '4': ['110100'],
  '5': ['100100'],
  '6': ['111000'],
  '7': ['111100'],
  '8': ['101100'],
  '9': ['011000'],
  '0': ['011100'],

  ' ': ['000000'],

  'CAP': ['000001'],
  'LTR': ['000011'],
  'NUM': ['010111'],
  'ALL_CAPS': ['000001', '000001'],
  'ERR': [''],

  //TODO: verify punctuation codes

  '.': ['001101'], //?TODO: different sign for decimal pt?
  ',': ['001000'],
  '?': ['001011'],
  '!': ['001110'],
  '\'': ['000010'],
  '*': ['000110', '000110'],
  '/': ['010010'],
  '[': ['000001', '001111'],
  ']': ['001111', '000010'],
  ':': ['001100'],
  '_': ['000011', '000011'],
  '\$': ['001101'],
  '-': ['000011'],
  '(': ['001111'],
  ')': ['001111'],
  '%': ['010000', '001100', '111010'],
  ';': ['001010'],
};

const Map<String, List<String>> shorthandWords = {
  // 'a': ['100000'],
  'but': ['101000'],
  'can': ['110000'],
  'do': ['110100'],
  'every': ['100100'],
  'from': ['111000'],
  'go': ['111100'],
  'have': ['101100'],
  // 'i': ['011000'],
  'just': ['011100'],
  'know': ['100010'],
  'like': ['101010'],
  'more': ['110010'],
  'not': ['110110'],
  // 'o': ['100110'],
  'people': ['111010'],
  'quite': ['111110'],
  'rather': ['101110'],
  'so': ['011010'],
  'that': ['011110'],
  'us': ['100011'],
  'very': ['101011'],
  'it': ['110011'],
  'you': ['110111'],
  'as': ['100111'],
  'will': ['011101'],

  'and': ['111011'],
  'by': ['000111'],
  'was': ['000111'], 
  'con': ['001100'], //
  'child': ['100001'],
  'enough': ['001001'],
  'to': ['001110'],
  'for': ['111111'],
  'were': ['001111'],
  'in': ['000110'], //
  'of': ['101111'],
  'out': ['101101'],
  'shall': ['110001'],
  'still': ['010010'],
  'the': ['011011'],
  'this': ['110101'],
  'which': ['100101'],
  'with': ['011111'],
};

const Map<String, List<String>> commonPatterns = {
  'ar': ['010110'],
  'cc': ['001100'], //
  'con': ['001100'], //
  'ch': ['100001'],
  'com': ['000011'],
  'dd': ['001101'],
  'dis': ['001101'],
  'ea': ['001000'],
  'ed': ['111001'],
  'en': ['001001'],
  'er': ['111101'],
  'ff': ['001110'],
  'to': ['001110'],//?
  'gg': ['001111'],
  'gh': ['101001'],
  'in': ['000110'], //? include in pattern?
  'ing': ['010011'],
  'of': ['101111'], //?
  'ou': ['101101'],
  'ow': ['011001'],
  'sh': ['110001'],
  'st': ['010010'],
  'the': ['011011'], //?
  'th': ['110101'],
  'wh': ['100101'],
  'with': ['011111'], //?
};
